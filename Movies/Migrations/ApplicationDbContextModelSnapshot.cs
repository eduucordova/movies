// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Movies.Data;

namespace Movies.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MoviesApp")
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Movies.Data.CastMember", b =>
                {
                    b.Property<int>("CastMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CastMemberId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActorName")
                        .HasColumnName("ActorName");

                    b.Property<string>("CharacterName")
                        .HasColumnName("CharacterName");

                    b.Property<int>("MovieId");

                    b.HasKey("CastMemberId")
                        .HasName("CastMemberId");

                    b.HasIndex("MovieId");

                    b.ToTable("tblCastMembers");
                });

            modelBuilder.Entity("Movies.Data.Movie", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MovieId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Director")
                        .HasColumnName("DirectorName");

                    b.Property<int>("Duration")
                        .HasColumnName("Duration");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnName("ReleaseDate");

                    b.Property<byte[]>("Thumbnail")
                        .HasColumnName("Thumbnail");

                    b.Property<string>("Title")
                        .HasColumnName("Title");

                    b.HasKey("MovieId")
                        .HasName("MovieId");

                    b.ToTable("tblMovies");
                });

            modelBuilder.Entity("Movies.Data.CastMember", b =>
                {
                    b.HasOne("Movies.Data.Movie", "Movie")
                        .WithMany("CastMembers")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
